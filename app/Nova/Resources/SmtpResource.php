<?phpnamespace App\Nova\Resources;use App\Models\Smtp;use App\Nova\Filters\SmtpHost;use App\Nova\Resource;use Illuminate\Http\Request;use Laravel\Nova\Fields\Badge;use Laravel\Nova\Fields\Boolean;use Laravel\Nova\Fields\ID;use Laravel\Nova\Fields\Number;use Laravel\Nova\Fields\Password;use Laravel\Nova\Fields\Status;use Laravel\Nova\Fields\Text;class SmtpResource extends Resource{    public static string $model = Smtp::class;    public static $title = 'host';    public static $search = [        'host', 'username'    ];    public function fields(Request $request): array    {        return [            ID::make()                ->hide()                ->sortable(),            Text::make('Host')                ->copyable()                ->sortable()                ->rules('required'),            Number::make('Port')                ->sortable()                ->rules('required', 'integer'),            Badge::make('Encryption')                ->map([                    'tls' => 'success',                    'ssl' => 'success',                    'none' => 'danger',                ])                ->sortable()                ->rules('required')                ->displayUsing(fn ($v) => str($v)->upper()),            Text::make('Username')                ->copyable()                ->sortable(),            Text::make('Password')                ->sortable()                ->copyable(),            Number::make('Quota', 'sending_quota')                ->sortable()                ->default(1000)                ->rules('required', 'integer'),            Number::make('Concurrent', 'sending_concurrent')                ->sortable()                ->default(2)                ->rules('required', 'integer'),            Number::make('Sent Count')                ->hideWhenCreating()                ->default(0)                ->sortable()                ->rules('integer'),            Boolean::make('Active')                ->sortable()                ->default(true)        ];    }    public function cards(Request $request): array    {        return [];    }    public function filters(Request $request): array    {        return [            new SmtpHost()        ];    }    public function lenses(Request $request): array    {        return [];    }    public function actions(Request $request): array    {        return [];    }    public static function label(): string    {        return 'SMTPs';    }}